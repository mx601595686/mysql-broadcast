"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const io = require("socket.io-client");
const emitter = require("component-emitter");
class MysqlBroadcastClient extends emitter {
    /**
     * @param {string} ip 服务器ip，默认localhost
     * @param {string} port 服务器端口，默认3000
     */
    constructor(ip = 'localhost', port = 3000) {
        super();
        // 打开websocket，但不使用这个接口
        const socket = io(`http://${ip}:${port}`, { autoConnect: false });
        socket.on('error', this.emit.bind(this, 'error'));
        socket.on('disconnect', this.emit.bind(this, 'disconnect'));
        socket.on('connect', this.emit.bind(this, 'connect'));
        socket.open();
        this.socket_QuerySql = io(`${ip}:${port}/QuerySql`, { autoConnect: false });
        this.socket_Broadcast = io(`${ip}:${port}/Broadcast`, { autoConnect: false });
        this.socket_ListenDbChanging = io(`${ip}:${port}/ListenDbChanging`, { autoConnect: false });
    }
    /**
     * 执行sql查询，使用方法与mysql.js的query方法是一样的
     *
     * @param {string} sql
     * @param {any[]} args
     * @returns {Promise<{ results: any[], fields: any[] }>}
     */
    query(sql, args) {
        return new Promise((resolve, reject) => {
            this.socket_QuerySql.emit('query', [sql, args], function (err, data) {
                err ? reject(new Error(err)) : resolve(data);
            });
        });
    }
}
exports.default = MysqlBroadcastClient;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk15c3FsQnJvYWRjYXN0Q2xpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQXdDO0FBQ3hDLDZDQUE4QztBQUU5QywwQkFBMEMsU0FBUSxPQUFPO0lBTXJEOzs7T0FHRztJQUNILFlBQVksS0FBYSxXQUFXLEVBQUUsT0FBZSxJQUFJO1FBQ3JELEtBQUssRUFBRSxDQUFDO1FBQ1IsdUJBQXVCO1FBQ3ZCLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO1FBQ2pFLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ2xELE1BQU0sQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQzVELE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVkLElBQUksQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxJQUFJLElBQUksV0FBVyxFQUFFLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDNUUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxJQUFJLFlBQVksRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzlFLElBQUksQ0FBQyx1QkFBdUIsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLElBQUksSUFBSSxtQkFBbUIsRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ2hHLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCxLQUFLLENBQUMsR0FBVyxFQUFFLElBQVk7UUFDM0IsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU07WUFDL0IsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxFQUFFLFVBQVUsR0FBVyxFQUFFLElBQVM7Z0JBQzVFLEdBQUcsR0FBRyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDakQsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSjtBQXRDRCx1Q0FzQ0MiLCJmaWxlIjoiTXlzcWxCcm9hZGNhc3RDbGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW8gPSByZXF1aXJlKCdzb2NrZXQuaW8tY2xpZW50Jyk7XG5pbXBvcnQgZW1pdHRlciA9IHJlcXVpcmUoJ2NvbXBvbmVudC1lbWl0dGVyJyk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE15c3FsQnJvYWRjYXN0Q2xpZW50IGV4dGVuZHMgZW1pdHRlciB7XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IHNvY2tldF9RdWVyeVNxbDogU29ja2V0SU9DbGllbnQuU29ja2V0O1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc29ja2V0X0Jyb2FkY2FzdDogU29ja2V0SU9DbGllbnQuU29ja2V0O1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc29ja2V0X0xpc3RlbkRiQ2hhbmdpbmc6IFNvY2tldElPQ2xpZW50LlNvY2tldDtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpcCDmnI3liqHlmahpcO+8jOm7mOiupGxvY2FsaG9zdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwb3J0IOacjeWKoeWZqOerr+WPo++8jOm7mOiupDMwMDBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihpcDogc3RyaW5nID0gJ2xvY2FsaG9zdCcsIHBvcnQ6IG51bWJlciA9IDMwMDApIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgLy8g5omT5byAd2Vic29ja2V077yM5L2G5LiN5L2/55So6L+Z5Liq5o6l5Y+jXG4gICAgICAgIGNvbnN0IHNvY2tldCA9IGlvKGBodHRwOi8vJHtpcH06JHtwb3J0fWAsIHsgYXV0b0Nvbm5lY3Q6IGZhbHNlfSk7XG4gICAgICAgIHNvY2tldC5vbignZXJyb3InLCB0aGlzLmVtaXQuYmluZCh0aGlzLCAnZXJyb3InKSk7XG4gICAgICAgIHNvY2tldC5vbignZGlzY29ubmVjdCcsIHRoaXMuZW1pdC5iaW5kKHRoaXMsICdkaXNjb25uZWN0JykpO1xuICAgICAgICBzb2NrZXQub24oJ2Nvbm5lY3QnLCB0aGlzLmVtaXQuYmluZCh0aGlzLCAnY29ubmVjdCcpKTtcbiAgICAgICAgc29ja2V0Lm9wZW4oKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuc29ja2V0X1F1ZXJ5U3FsID0gaW8oYCR7aXB9OiR7cG9ydH0vUXVlcnlTcWxgLCB7IGF1dG9Db25uZWN0OiBmYWxzZSB9KTtcbiAgICAgICAgdGhpcy5zb2NrZXRfQnJvYWRjYXN0ID0gaW8oYCR7aXB9OiR7cG9ydH0vQnJvYWRjYXN0YCwgeyBhdXRvQ29ubmVjdDogZmFsc2UgfSk7XG4gICAgICAgIHRoaXMuc29ja2V0X0xpc3RlbkRiQ2hhbmdpbmcgPSBpbyhgJHtpcH06JHtwb3J0fS9MaXN0ZW5EYkNoYW5naW5nYCwgeyBhdXRvQ29ubmVjdDogZmFsc2UgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5omn6KGMc3Fs5p+l6K+i77yM5L2/55So5pa55rOV5LiObXlzcWwuanPnmoRxdWVyeeaWueazleaYr+S4gOagt+eahFxuICAgICAqIFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzcWwgXG4gICAgICogQHBhcmFtIHthbnlbXX0gYXJncyBcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx7IHJlc3VsdHM6IGFueVtdLCBmaWVsZHM6IGFueVtdIH0+fSBcbiAgICAgKi9cbiAgICBxdWVyeShzcWw6IHN0cmluZywgYXJncz86IGFueVtdKTogUHJvbWlzZTx7IHJlc3VsdHM6IGFueVtdLCBmaWVsZHM6IGFueVtdIH0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc29ja2V0X1F1ZXJ5U3FsLmVtaXQoJ3F1ZXJ5JywgW3NxbCwgYXJnc10sIGZ1bmN0aW9uIChlcnI6IHN0cmluZywgZGF0YTogYW55KSB7XG4gICAgICAgICAgICAgICAgZXJyID8gcmVqZWN0KG5ldyBFcnJvcihlcnIpKSA6IHJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufSJdfQ==
